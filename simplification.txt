// make all quark libraries only accessible via interfaces that are
// the result of a function call (could possibly eliminate statics
// entirely from quark, force user to store as singleton)

mdk = MDK.load()

// startup
mdk.register(service, version)

// runtime
mdk.resolve(service, [version]) -> node

// Tracks any resolved services, and if anything bad happens, produces
// a full distributed stack trace, report the issue via tracing, and
// circuit break the resolved services.
mdk.protect(callable)

// is this different from protect?
mdk.span(name, baggage, callable) -> SharedContext
mdk.log(level, category, text)
